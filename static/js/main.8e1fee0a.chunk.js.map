{"version":3,"sources":["DataFetcher.js","Component/UserList.js","Component/ProfileBody.js","Component/Profile.js","Component/Directory.js","App.js","reportWebVitals.js","index.js"],"names":["DATA","cat","name","bio","profilePictureUrl","friends","dog","komodo","fetchUserData","username","callback","delay","Math","floor","random","setTimeout","UserList","usernames","passFromProfileAndDirectory","handleClick","event","target","dataset","console","log","map","data-username","onClick","ProfileBody","userData","pilih","className","src","alt","Profile","useState","setUserData","useEffect","isLoading","body","Directory","App","currentUsername","setCurrentUsername","handleChoose","newUsername","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KACMA,EAAO,CACTC,IAAK,CACHC,KAAM,YACNC,IAAK,kDACLC,kBACE,uFACFC,QAAS,CAAC,WAEZC,IAAK,CACHJ,KAAM,YACNC,IAAK,kCACLC,kBACE,uFACFC,QAAS,CAAC,WAEZE,OAAQ,CACNL,KAAM,cACNC,IAAK,uCACLC,kBACE,0FACFC,QAAS,CAAC,MAAO,SAkBRG,EAbU,SAACC,EAAUC,GAGhC,IAAMC,EAAQC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAmB,IAOjD,OALgBC,YAAW,WACzBL,EAASV,EAAKS,MACbE,I,OCXUK,EApBA,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,4BAEtBC,EAAc,SAACC,GACnBF,EAA4BE,EAAMC,OAAOC,QAAQb,UACjDc,QAAQC,IAAIJ,EAAMC,SAGlB,OACE,6BACGJ,EAAUQ,KAAI,SAAChB,GAAD,OACb,6BACE,yBAAQiB,gBAAejB,EAAUkB,QAASR,EAA1C,cACIV,MAFGA,SCcJmB,EAvBK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOrB,EAAe,EAAfA,SAG9BP,EAAO2B,EAAS3B,KAChBC,EAAM0B,EAAS1B,IACfE,EAAUwB,EAASxB,QAEzB,OACI,sBAAK0B,UAAU,cAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKC,IAAKH,EAASzB,kBAAmB6B,IAAI,OAE9C,sBAAKF,UAAU,eAAf,UACI,6BAAK7B,IACL,mCAAMO,KACN,4BAAIN,IACJ,4CACA,cAAC,EAAD,CAAUc,UAAWZ,EAASa,4BAA6BY,WC0B5DI,EA1CC,SAAC,GAAyB,IAAvBzB,EAAsB,EAAtBA,SAAUqB,EAAY,EAAZA,MAAY,EAEPK,mBAAS,MAFF,mBAEhCN,EAFgC,KAEtBO,EAFsB,KAKvCC,qBAAU,WAEND,EAAY,MAEZ5B,EAAcC,GAAU,SAACoB,GACvBO,EAAYP,QAMf,CAACpB,IAEJ,IAAM6B,EAAwB,MAAZT,EAIdE,EAAY,UACZQ,EACF,cAAC,EAAD,CAAaT,MAAOA,EAAOrB,SAAUA,EAAUoB,SAAUA,IAU3D,OAPIS,IACFP,GAAa,WACbQ,EACE,yDAKF,qBAAKR,UAAWA,EAAhB,SACGQ,KClBQC,EAnBG,SAAC,GAAa,IAAZV,EAAW,EAAXA,MAClB,OACE,sBAAKC,UAAU,YAAf,UACE,gDAKA,cAAC,EAAD,CACEd,UAAW,CAAC,MAAO,MAAO,UAC1BC,4BAA6BY,QCyCtBW,EAlDH,WAAO,IAkBXF,EAlBU,EAE8BJ,mBAAS,MAFvC,mBAEVO,EAFU,KAEOC,EAFP,KAOXC,EAAe,SAACC,GACnBF,EAAmBE,IAsBnB,OAVEN,EADEG,EAEA,cAAC,EAAD,CACEjC,SAAUiC,EACVZ,MAAOc,IAIJ,cAAC,EAAD,CAAWd,MAAOc,IAIzB,sBAAKb,UAAU,MAAf,UACE,mCACER,QAAQC,IAAI,oBAAoBkB,GAChC,yCACA,8BACGA,GACC,wBAAQf,QAvBe,WACnCgB,EAAmB,OAsBP,8DAON,+BAAOJ,QCpCAO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.8e1fee0a.chunk.js","sourcesContent":["\r\nconst DATA = {\r\n    cat: {\r\n      name: 'Kitty Cat',\r\n      bio: \"I'm the coolest cat around. I'm the cat's meow!\",\r\n      profilePictureUrl:\r\n        'https://content.codecademy.com/courses/React/react_lifecycle_cat_profile_picture.jpg',\r\n      friends: ['komodo'],\r\n    },\r\n    dog: {\r\n      name: 'Doggy Dog',\r\n      bio: \"I'm the doggity dog! Woof woof!\",\r\n      profilePictureUrl:\r\n        'https://content.codecademy.com/courses/React/react_lifecycle_dog_profile_picture.jpg',\r\n      friends: ['komodo'],\r\n    },\r\n    komodo: {\r\n      name: 'Lizard Lady',\r\n      bio: \"I'm a Komodo dragon. You'll love me.\",\r\n      profilePictureUrl:\r\n        'https://content.codecademy.com/courses/React/react_lifecycle_komodo_profile_picture.jpg',\r\n      friends: ['cat', 'dog'],\r\n    },\r\n  };\r\n  \r\n\r\n   const fetchUserData = (username, callback) => {\r\n\r\n    //* delay for loading 1 detik\r\n    const delay = Math.floor(Math.random() * 1000) + 500;\r\n\r\n    const timeout = setTimeout(() => {\r\n      callback(DATA[username]);\r\n    }, delay);\r\n  \r\n \r\n    return timeout\r\n  }\r\n  \r\nexport default fetchUserData;","import React from 'react';\r\n\r\nconst UserList = ({usernames, passFromProfileAndDirectory}) => {\r\n\r\n  const handleClick = (event) => {\r\n    passFromProfileAndDirectory(event.target.dataset.username);\r\n    console.log(event.target)\r\n  }\r\n\r\n    return (\r\n      <ul>\r\n        {usernames.map((username) => (\r\n          <li key={username}>\r\n            <button data-username={username} onClick={handleClick}>\r\n              @{username}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  export default UserList\r\n","import UserList from './UserList'\r\n\r\n\r\nconst ProfileBody = ({ userData, pilih, username }) => {\r\n\r\n\r\n    const name = userData.name\r\n    const bio = userData.bio\r\n    const friends = userData.friends\r\n\r\n    return (\r\n        <div className=\"ProfileBody\">\r\n            <div className=\"profile-picture\">\r\n                <img src={userData.profilePictureUrl} alt=\"\" />\r\n            </div>\r\n            <div className=\"profile-body\">\r\n                <h2>{name}</h2>\r\n                <h3>@{username}</h3>\r\n                <p>{bio}</p>\r\n                <h3>My friends</h3>\r\n                <UserList usernames={friends} passFromProfileAndDirectory={pilih} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileBody\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport fetchUserData from '../DataFetcher';\r\nimport ProfileBody from './ProfileBody';\r\n\r\nconst Profile = ({ username, pilih }) => {\r\n\r\n  const [userData, setUserData] = useState(null)\r\n\r\n  // *fetchUserData = (username, callback)   \r\n  useEffect(() => {\r\n    const loadUserData = () => {\r\n      setUserData(null);\r\n\r\n      fetchUserData(username, (userData) => {\r\n        setUserData(userData);\r\n      });\r\n    }\r\n\r\n    loadUserData()\r\n    //*props trigger currentUserName\r\n  }, [username])\r\n\r\n  const isLoading = userData == null ? true : false;\r\n\r\n\r\n  //* class default Profile\r\n  let className = 'Profile';\r\n  let body = (\r\n    <ProfileBody pilih={pilih} username={username} userData={userData} />\r\n  )\r\n\r\n  if (isLoading) {\r\n    className += ' loading';\r\n    body = (\r\n      <h2>Tunggu dulu gannnn ...</h2>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      {body}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Profile\r\n\r\n\r\n","import React from 'react';\r\nimport UserList from './UserList';\r\n\r\nconst Directory = ({pilih}) => {\r\n  return (\r\n    <div className=\"Directory\">\r\n      <h2>User directory</h2>\r\n\r\n      {\r\n      //* display nama binantang \r\n      }\r\n      <UserList\r\n        usernames={['dog', 'cat', 'komodo']}\r\n        passFromProfileAndDirectory={pilih}\r\n      />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Directory","import React, { useState } from 'react';\r\nimport Profile  from './Component/Profile';\r\nimport  Directory  from './Component/Directory';\r\n\r\nconst App = () => {\r\n  \r\nconst [ currentUsername, setCurrentUsername ] = useState(null)\r\n\r\n/*\r\n * pilih username \r\n */\r\n const handleChoose = (newUsername) => {\r\n    setCurrentUsername(newUsername);\r\n  }\r\n\r\n  /*\r\n * back to directory\r\n */\r\n const handleReturnToDirectoryClick= () => {\r\n  setCurrentUsername(null);\r\n  }\r\n \r\n    let body;\r\n    if (currentUsername) {\r\n      body = (\r\n        <Profile\r\n          username={currentUsername}\r\n          pilih={handleChoose}\r\n        />\r\n      );\r\n    } else {\r\n      body = <Directory pilih={handleChoose} />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header>\r\n        { console.log('current Username ',currentUsername) }\r\n          <h1>PetBook</h1>\r\n          <nav>\r\n            {currentUsername && (\r\n              <button onClick={handleReturnToDirectoryClick}>\r\n                Return to directory ( set username to null)\r\n              </button>\r\n            )}\r\n          </nav>\r\n        </header>\r\n\r\n        <main>{body}</main>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}